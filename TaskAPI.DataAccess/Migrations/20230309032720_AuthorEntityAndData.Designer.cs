// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskAPI.DataAccess;

namespace TaskAPI.DataAccess.Migrations
{
    [DbContext(typeof(TodoDbContext))]
    [Migration("20230309032720_AuthorEntityAndData")]
    partial class AuthorEntityAndData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TaskAPI.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Fullname = "Nuwan"
                        },
                        new
                        {
                            Id = 2,
                            Fullname = "Kasun"
                        },
                        new
                        {
                            Id = 3,
                            Fullname = "Kamal"
                        },
                        new
                        {
                            Id = 4,
                            Fullname = "Nimal"
                        },
                        new
                        {
                            Id = 5,
                            Fullname = "Amal"
                        });
                });

            modelBuilder.Entity("TaskAPI.Models.Todo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Due")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Todos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Created = new DateTime(2023, 3, 9, 8, 57, 19, 965, DateTimeKind.Local).AddTicks(7024),
                            Description = "Get Some text Books for school",
                            Due = new DateTime(2023, 3, 14, 8, 57, 19, 967, DateTimeKind.Local).AddTicks(6792),
                            Status = 1,
                            Title = "Get books for School from DB"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            Created = new DateTime(2023, 3, 9, 8, 57, 19, 967, DateTimeKind.Local).AddTicks(9326),
                            Description = "Get Some text Books for school",
                            Due = new DateTime(2023, 3, 14, 8, 57, 19, 967, DateTimeKind.Local).AddTicks(9339),
                            Status = 1,
                            Title = "Get books for School from DB"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 1,
                            Created = new DateTime(2023, 3, 9, 8, 57, 19, 967, DateTimeKind.Local).AddTicks(9361),
                            Description = "Get Some text Books for school",
                            Due = new DateTime(2023, 3, 14, 8, 57, 19, 967, DateTimeKind.Local).AddTicks(9364),
                            Status = 1,
                            Title = "Get books for School from DB"
                        });
                });

            modelBuilder.Entity("TaskAPI.Models.Todo", b =>
                {
                    b.HasOne("TaskAPI.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });
#pragma warning restore 612, 618
        }
    }
}
